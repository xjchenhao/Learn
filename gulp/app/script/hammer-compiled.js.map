{"version":3,"sources":["hammer.js"],"names":[],"mappings":"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","file":"hammer-compiled.js","sourcesContent":["/*! Hammer.JS - v2.0.4 - 2014-09-28\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2014 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge]\n * @returns {Object} dest\n */\nfunction extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nfunction merge(dest, src) {\n    return extend(dest, src, true);\n}\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        extend(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument;\n    return (doc.defaultView || doc.parentWindow);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = last.deltaX - input.deltaX;\n        var deltaY = last.deltaY - input.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x > 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y > 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) - getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.allow = true; // used by Input.TouchMouse to disable mouse events\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down, and mouse events are allowed (see the TouchMouse input)\n        if (!this.pressed || !this.allow) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        // when we're in a touch event, so  block all upcoming mouse events\n        // most mobile browser also emit mouseevents, right after touchstart\n        if (isTouch) {\n            this.mouse.allow = false;\n        } else if (isMouse && !this.mouse.allow) {\n            return;\n        }\n\n        // reset the allowMouse when we're done\n        if (inputEvent & (INPUT_END | INPUT_CANCEL)) {\n            this.mouse.allow = true;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        // not needed with native support for the touchAction property\n        if (NATIVE_TOUCH_ACTION) {\n            return;\n        }\n\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE);\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // pan-x and pan-y can be combined\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_PAN_X + ' ' + TOUCH_ACTION_PAN_Y;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.id = uniqueId();\n\n    this.manager = null;\n    this.options = merge(options || {}, this.defaults);\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        extend(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(withState) {\n            self.manager.emit(self.options.event + (withState ? stateStr(state) : ''), input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(true);\n        }\n\n        emit(); // simple 'eventName' events\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(true);\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = extend({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        this._super.emit.call(this, input);\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            this.manager.emit(this.options.event + inOut, input);\n        }\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 500, // minimal time of the pointer to be pressed\n        threshold: 5 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.65,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.velocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.velocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.velocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.direction &&\n            input.distance > this.options.threshold &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.direction);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 2, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED ) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create an manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.4';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, { enable: false }],\n        [PinchRecognizer, { enable: false }, ['rotate']],\n        [SwipeRecognizer,{ direction: DIRECTION_HORIZONTAL }],\n        [PanRecognizer, { direction: DIRECTION_HORIZONTAL }, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, { event: 'doubletap', taps: 2 }, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    options = options || {};\n\n    this.options = merge(options, Hammer.defaults);\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        extend(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        var recognizers = this.recognizers;\n        recognizer = this.get(recognizer);\n        recognizers.splice(inArray(recognizers, recognizer), 1);\n\n        this.touchAction.update();\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    each(manager.options.cssProps, function(value, name) {\n        element.style[prefixed(element.style, name)] = add ? value : '';\n    });\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nextend(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\nif (typeof define == TYPE_FUNCTION && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n"]}