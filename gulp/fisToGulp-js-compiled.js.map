{"version":3,"sources":["fisToGulp-js.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAClC,IAAI,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC;;AAEnD,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;IAClB,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAG3B,MAAM,CAAC,OAAO,GAAG,YAAY;;AAEzB,WAAO,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE;;;AAGxC,YAAI,IAAI,CAAC,MAAM,EAAE,EAAE;AACf,cAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAElB,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;;;SAG3B,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;AACxB,sBAAM,IAAI,WAAW,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAC;aACtD;;AAED,YAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;;AAC7C,oBAAY,GAAG,sBAAsB;;AACrC,uBAAe,GAAG,EAAE;;AACpB,oBAAY,GAAG,EAAE;;AACjB,oBAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;;AACtC,oBAAY,GAAG,EAAE;;AACjB,cAAM,GAAG,EAAE,CAAC;;AAEhB,eAAO,CAAC,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA,IAAK,IAAI,EAAE;AACvD,2BAAe,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAC5B,wBAAY,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACzB,wBAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;;;AAGrD,gBAAI,CAAC,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;AAC9B,sBAAM,IAAI,WAAW,CAAC,MAAM,EAAE,mCAAmC,GAAG,IAAI,CAAC,IAAI,GAAG,eAAe,GAAG,YAAY,CAAC,CAAC;aACnH;;;AAGD,gBAAI,GAAG,GAAG,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,QAAQ,EAAE,CAC7C,OAAO,CAAC,KAAK,EAAC,EAAE,CAAC,CACjB,OAAO,CAAC,KAAK,EAAC,MAAM,CAAC,CACrB,OAAO,CAAC,KAAK,EAAC,MAAM,CAAC,CACrB,OAAO,CAAC,QAAQ,EAAC,IAAI,CAAC,CACtB,OAAO,CAAC,QAAQ,EAAC,IAAI,CAAC,CACtB,OAAO,CAAC,SAAS,EAAC,IAAI,CAAC,CAAC;;;AAG7B,wBAAY,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;SAC3E;;AAED,YAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC;;;AAGzC,UAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAClB,CAAC,CAAC;CACN,CAAC","file":"fisToGulp-js-compiled.js","sourcesContent":["var through = require('through2');\nvar pluginError = require('gulp-util').PluginError;\n\nvar fs = require('fs'),\n    path = require(\"path\");\n\n\nmodule.exports = function () {\n\n    return through.obj(function (file, enc, cb) {\n\n        // 判断文件类别,生成文件内容或返回结果\n        if (file.isNull()) {\n            cb(null, file);\n\n        } else if (file.isBuffer()) {\n            //file.contents = Buffer.concat([file.contents, prefixText]);\n\n        } else if (file.isStream()) {\n            throw new pluginError('test', 'Please to buffer!');\n        }\n\n        var fileContents = file.contents.toString('utf8'),                  // 文件内容\n            regImportTpl = /__inline\\('(.*)'\\)/ig,                          // 正则:匹配html上内嵌的模板链接\n            placeholderMark = '',                                           // 模板的占位标签\n            includesPath = '',                                              // 获取html上内嵌的模板链接\n            relativePath = path.dirname(file.path),                         // 获取相对路径\n            absolutePath = '',                                              // 获取文件的绝对路径\n            result = {};\n\n        while ((result = regImportTpl.exec(fileContents)) != null) {\n            placeholderMark = result[0];\n            includesPath = result[1];\n            absolutePath = path.join(relativePath, includesPath);\n\n            // 非文件抛出错误\n            if (!fs.existsSync(absolutePath)) {\n                throw new pluginError('test', 'File does not exist!\\nerrorFile: ' + file.path + '\\nerrorPath: ' + includesPath);\n            }\n\n            // 读取并格式化tpl文件的文本\n            var abc = fs.readFileSync(absolutePath).toString()\n                .replace(/\\n/g,'')\n                .replace(/\\'/g,'\\\\\\'')\n                .replace(/\\\"/g,'\\\\\\\"')\n                .replace(/>\\s*</g,'><')\n                .replace(/}\\s*</g,'}<')\n                .replace(/>\\s*\\{/g,'>{');\n\n            // 替换文件文本\n            fileContents = fileContents.replace(placeholderMark, '\\'' + abc + '\\'');\n        }\n\n        file.contents = new Buffer(fileContents);\n\n        // 返回结果\n        cb(null, file);\n    });\n};"]}